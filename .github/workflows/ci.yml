name: Python CI

on:
  push:
    branches: [ main, master, develop ] # Adjust branches as needed
  pull_request:
    branches: [ main, master, develop ] # Adjust branches as needed

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Format check with black
      run: |
        black --check .

  unit-tests:
    name: Unit Tests & Coverage (Python ${{ matrix.python-version }})
    needs: lint-and-format # Run after linting/formatting passes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow other matrix jobs to continue if one fails
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"] # Test against supported versions

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov # Ensure coverage tool is installed
    - name: Run unit tests with pytest and generate coverage
      run: |
        pytest tests/ --cov=agentkit --cov-report=term --cov-report=xml --ignore=tests/integration
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-py${{ matrix.python-version }}
        path: coverage.xml
        if-no-files-found: error # Fail if coverage.xml is not generated

  integration-tests:
    name: Integration Tests (Python 3.9)
    needs: lint-and-format # Run after linting/formatting passes
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build Docker services
      run: docker-compose build
    - name: Start Docker services
      run: docker-compose up -d
    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 15 # Simple wait, consider a more robust health check if needed
        docker-compose ps # Show status
    - name: Run integration tests with pytest
      run: |
        pytest tests/integration/
    - name: Stop Docker services
      if: always() # Ensure cleanup even if tests fail
      run: docker-compose down